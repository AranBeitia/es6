{"version":3,"sources":["src/utils/utils.js","src/17-exercise/17-exercise-setup.js","src/17-exercise/17-exercise.js"],"names":["isFunction","fn","isArrowFunction","isAsyncFunction","Object","prototype","toString","call","includes","setup17Exercise","exercise17","fetch","then","response","json","data","displayContents","wrapper","document","querySelector","textContent","JSON","stringify"],"mappings":";;;;;;;ACAA,ACoCA;;ADlCA,ADFO,SCEES,ADFOT,UAAT,CAAoBC,EAApB,ECEP,ADF+B,CCENS,UAAzB,EAAqC;AACjC,ADFA,MCEI,GDFG,OAAOT,EAAP,KAAc,MCENS,IDFf,MCEI,CAAJ,EAA4B;AACxBA,ACJR,AFEC,ICEOA,UAAU;AACb;AACJ,ADFM,SAASR,eAAT,CAAyBD,EAAzB,EAA6B;AAChC,MAAIA,EAAJ;AACH,eCEcQ;;ADAR,SAASN,eAAT,CAAyBF,EAAzB,EAA6B;AAChC,SAAOG,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,EAA/B,EAAmCO,QAAnC,CAA4C,eAA5C,CAAP;AACH;;;;;;;;;;;;;AEYD;AACA,SAASE,UAAT,GAAsB;AAClB,SAAOC,KAAK,CAAC,8CAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENF,IAFM,CAEDG,IAAI,IAAIC,eAAe,CAACD,IAAD,CAFtB,CAAP;AAGH,EAED;;;AACA,SAASC,eAAT,CAAyBD,IAAzB,EAA+B;AAC3B,QAAME,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAhB;AAEAF,EAAAA,OAAO,CAACG,WAAR,GAAsBC,IAAI,CAACC,SAAL,CAAeP,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAtB;AACH;;AAID,IAAI,kBAAyB,MAA7B,EAAqC;AACjC,8BAAgB,MAAML,UAAU,EAAhC;AACH;;eAEcA","file":"17-exercise.1673bbc3.js","sourceRoot":"..","sourcesContent":["export function isFunction(fn) {\n    return typeof fn === \"function\";\n}\n\nexport function isArrowFunction(fn) {\n    new fn();\n}\n\nexport function isAsyncFunction(fn) {\n    return Object.prototype.toString.call(fn).includes(\"AsyncFunction\");\n}\n","import { isFunction } from \"../utils/utils\";\n\nfunction setup17Exercise(exercise17) {\n    if (isFunction(exercise17)) {\n        exercise17();\n    }\n}\n\nexport default setup17Exercise;\n","/**\n * Exercise 17:\n *\n * Complete the code of the exercise17 function so that:\n *\n * 1. It returns the call to the fetch() method to make\n *    a network request to the following url:\n *\n * https://jsonplaceholder.typicode.com/users/1\n *\n * 2. Obtains the data from the fetch() call and executes several .then()\n *    method calls until it can get the data returned from the api.\n *\n *    Once it has the data inside the .then() call, it should execute\n *    the `displayContents` function by passing it as an argument\n *    the response data returned by the fetch json() method.\n *\n * function exercise17() {\n *   return fetch(\"...\")...\n * }\n */\n\n// Finish the code of the function\nfunction exercise17() {\n    return fetch('https://jsonplaceholder.typicode.com/users/1')\n    .then(response => response.json())\n    .then(data => displayContents(data))\n}\n\n// Donâ€™t change the code bellow this line\nfunction displayContents(data) {\n    const wrapper = document.querySelector(\".ex-wrapper\");\n\n    wrapper.textContent = JSON.stringify(data, null, 2);\n}\n\nimport setup17Exercise from \"./17-exercise-setup\";\n\nif (process.env.NODE_ENV !== \"test\") {\n    setup17Exercise(() => exercise17());\n}\n\nexport default exercise17;\n"]}