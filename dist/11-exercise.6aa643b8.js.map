{"version":3,"sources":["src/utils/utils.js","src/11-exercise/11-exercise-setup.js","src/11-exercise/11-exercise.js"],"names":["isFunction","fn","isArrowFunction","isAsyncFunction","Object","prototype","toString","call","includes","setup11Exercise","exercise11","array","entry","result","find","it","console","log"],"mappings":";;;;;;;ACAA,ACwBA;;ADtBA,ADFO,SCEES,ADFOT,UAAT,CAAoBC,EAApB,ECEP,ADF+B,CCENS,UAAzB,EAAqC;AACjC,ADFA,MCEI,GDFG,OAAOT,EAAP,KAAc,MCENS,IDFf,MCEI,CAAJ,EAA4B;AACxBA,ACJR,AFEC,ICEOA,UAAU;AACb;AACJ,ADFM,SAASR,eAAT,CAAyBD,EAAzB,EAA6B;AAChC,MAAIA,EAAJ;AACH,eCEcQ;;ADAR,SAASN,eAAT,CAAyBF,EAAzB,EAA6B;AAChC,SAAOG,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,EAA/B,EAAmCO,QAAnC,CAA4C,eAA5C,CAAP;AACH;;;;;;;;AEOD;AACA,SAASE,UAAT,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkC;AAC9B,QAAMC,MAAM,GAAGF,KAAK,CAACG,IAAN,CAAWC,EAAE,IAAIA,EAAE,KAAKH,KAAxB,CAAf;AACA,SAAOC,MAAP;AACH,EAED;;;AAGA,IAAI,kBAAyB,MAA7B,EAAqC;AACjC,8BAAgB,MACZG,OAAO,CAACC,GAAR,CACIP,UAAU,CACN,CAAC,QAAD,EAAW,SAAX,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,QAA/C,CADM,EAEN,WAFM,CADd,CADJ;AAQH;;eAEcA","file":"11-exercise.6aa643b8.js","sourceRoot":"..","sourcesContent":["export function isFunction(fn) {\n    return typeof fn === \"function\";\n}\n\nexport function isArrowFunction(fn) {\n    new fn();\n}\n\nexport function isAsyncFunction(fn) {\n    return Object.prototype.toString.call(fn).includes(\"AsyncFunction\");\n}\n","import { isFunction } from \"../utils/utils\";\n\nfunction setup11Exercise(exercise11) {\n    if (isFunction(exercise11)) {\n        exercise11();\n    }\n}\n\nexport default setup11Exercise;\n","/**\n * Exercise 11:\n *\n * Finish the code of the `exercise11` function so that it:\n *\n * 1. Receives 2 parameters: `array` and `entry`\n *\n * @example\n *\n * function fn (array, entry) {...}\n *\n * 2. Executes the array.find() method to find the `entry`\n *    in the `array` parameter that the function receives.\n *\n * 3. Returns the result\n */\n\n// Finish the code of the function\nfunction exercise11(array, entry) {\n    const result = array.find(it => it === entry)\n    return result\n}\n\n// Donâ€™t change the code bellow this line\nimport setup11Exercise from \"./11-exercise-setup\";\n\nif (process.env.NODE_ENV !== \"test\") {\n    setup11Exercise(() =>\n        console.log(\n            exercise11(\n                [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\n                \"Wednesday\"\n            )\n        )\n    );\n}\n\nexport default exercise11;\n"]}