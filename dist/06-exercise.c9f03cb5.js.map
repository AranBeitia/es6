{"version":3,"sources":["src/utils/utils.js","src/06-exercise/06-exercise-setup.js","src/06-exercise/06-exercise.js"],"names":["isFunction","fn","isArrowFunction","isAsyncFunction","Object","prototype","toString","call","includes","setup06Exercise","exercise06","user","firstName","lastName","age","jobTitle","company","averageGrade","rest","console","log"],"mappings":";;;;;;;ACAA,ACiCA;;AD/BA,ADFO,SCEES,ADFOT,UAAT,CAAoBC,EAApB,ECEP,ADF+B,CCENS,UAAzB,EAAqC;AACjC,ADFA,MCEI,GDFG,OAAOT,EAAP,KAAc,MCENS,IDFf,MCEI,CAAJ,EAA4B;AACxBA,ADFP,ICEOA,UAAU;AACb;AACJ,ADFM,SAASR,eAAT,CAAyBD,EAAzB,EAA6B;AAChC,MAAIA,EAAJ;AELJ,AFMC,eCEcQ;;ADAR,SAASN,eAAT,CAAyBF,EAAzB,EAA6B;AAChC,SAAOG,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,EAA/B,EAAmCO,QAAnC,CAA4C,eAA5C,CAAP;AACH;;;;;;;;;;;;;AEQD;AACA,SAASE,UAAT,GAAsB;AACrB,QAAMC,IAAI,GAAG;AACZC,IAAAA,SAAS,EAAE,MADC;AAEZC,IAAAA,QAAQ,EAAE,OAFE;AAGZC,IAAAA,GAAG,EAAE,EAHO;AAIZC,IAAAA,QAAQ,EAAE,SAJE;AAKZC,IAAAA,OAAO,EAAE,kBALG;AAMZC,IAAAA,YAAY,EAAE;AANF,GAAb;;AAQA,QAAM;AAAEL,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAmCF,IAAzC;AAAA,QAAgCO,IAAhC,4BAAyCP,IAAzC;;AACA,SAAOO,IAAP;AACA,EAED;;;AAGA,IAAI,kBAAyB,MAA7B,EAAqC;AACpC,8BAAgB,MAAMC,OAAO,CAACC,GAAR,CAAYV,UAAU,EAAtB,CAAtB;AACA;;eAEcA","file":"06-exercise.c9f03cb5.js","sourceRoot":"..","sourcesContent":["export function isFunction(fn) {\n    return typeof fn === \"function\";\n}\n\nexport function isArrowFunction(fn) {\n    new fn();\n}\n\nexport function isAsyncFunction(fn) {\n    return Object.prototype.toString.call(fn).includes(\"AsyncFunction\");\n}\n","import { isFunction } from \"../utils/utils\";\n\nfunction setup06Exercise(exercise06) {\n    if (isFunction(exercise06)) {\n        exercise06();\n    }\n}\n\nexport default setup06Exercise;\n","/**\n * Exercise 06:\n *\n * Finish the code of the `exercise06` function so that it:\n *\n * 1. Destructures the first 2 keys of the `user` object\n *    and gathers all the other keys in an object\n *    using destructuring.\n *\n * @example\n * const data = { a: 1, b: 2, c: 3, d: 4};\n *\n * const {a, b, ...rest} = data;\n * => rest =  { c: 3, d: 4 }\n *\n * 2. Return the object with the remaining keys\n */\n\n// Finish the code of the function\nfunction exercise06() {\n\tconst user = {\n\t\tfirstName: 'John',\n\t\tlastName: 'Marks',\n\t\tage: 33,\n\t\tjobTitle: 'Student',\n\t\tcompany: 'Assembler School',\n\t\taverageGrade: 6.6,\n\t}\n\tconst { firstName, lastName, ...rest } = user\n\treturn rest\n}\n\n// Donâ€™t change the code bellow this line\nimport setup06Exercise from './06-exercise-setup'\n\nif (process.env.NODE_ENV !== 'test') {\n\tsetup06Exercise(() => console.log(exercise06()))\n}\n\nexport default exercise06\n"]}